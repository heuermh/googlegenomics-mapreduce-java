/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * Modify at your own risk.
 */

package com.google.api.services.genomics;

/**
 * Service definition for Genomics (v1beta).
 *
 * <p>
 * Provides access to Genomics data.
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="https://developers.google.com/genomics/v1beta/reference" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link GenomicsRequestInitializer} to initialize global parameters via its
 * {@link com.google.api.services.genomics.Genomics.Builder}.
 * </p>
 *
 * @since 1.3
 */
@SuppressWarnings("javadoc")
public class Genomics extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.19.0-rc-SNAPSHOT of the Genomics API library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://www.googleapis.com/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "genomics/v1beta/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link com.google.api.services.genomics.Genomics.Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Genomics(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Genomics(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Datasets collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Genomics genomics = new Genomics(...);}
   *   {@code Genomics.Datasets.List request = genomics.datasets().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Datasets datasets() {
    return new Datasets();
  }

  /**
   * The "datasets" collection of methods.
   */
  public class Datasets {

    /**
     * Creates a new dataset.
     *
     * Create a request for the method "datasets.create".
     *
     * This request holds the parameters needed by the genomics server.  After setting any optional
     * parameters, call the {@link com.google.api.services.genomics.Genomics.Datasets.Create#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.genomics.model.Dataset}
     * @return the request
     */
    public Create create(com.google.api.services.genomics.model.Dataset content) throws java.io.IOException {
      Create result = new Create(content);
      initialize(result);
      return result;
    }

    public class Create extends GenomicsRequest<com.google.api.services.genomics.model.Dataset> {

      private static final String REST_PATH = "datasets";

      /**
       * Creates a new dataset.
       *
       * Create a request for the method "datasets.create".
       *
       * This request holds the parameters needed by the the genomics server.  After setting any
       * optional parameters, call the {@link com.google.api.services.genomics.Genomics.Datasets.Create#execute()} method to invoke the remote operation.
       * <p> {@link
       * com.google.api.services.genomics.Genomics.Datasets.Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.genomics.model.Dataset}
       * @since 1.13
       */
      protected Create(com.google.api.services.genomics.model.Dataset content) {
        super(Genomics.this, "POST", REST_PATH, content, com.google.api.services.genomics.model.Dataset.class);
      }

      @Override
      public Create setAlt(String alt) {
        return (Create) super.setAlt(alt);
      }

      @Override
      public Create setFields(String fields) {
        return (Create) super.setFields(fields);
      }

      @Override
      public Create setKey(String key) {
        return (Create) super.setKey(key);
      }

      @Override
      public Create setOauthToken(String oauthToken) {
        return (Create) super.setOauthToken(oauthToken);
      }

      @Override
      public Create setPrettyPrint(Boolean prettyPrint) {
        return (Create) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Create setQuotaUser(String quotaUser) {
        return (Create) super.setQuotaUser(quotaUser);
      }

      @Override
      public Create setUserIp(String userIp) {
        return (Create) super.setUserIp(userIp);
      }

      @Override
      public Create set(String parameterName, Object value) {
        return (Create) super.set(parameterName, value);
      }
    }
    /**
     * Deletes a dataset.
     *
     * Create a request for the method "datasets.delete".
     *
     * This request holds the parameters needed by the genomics server.  After setting any optional
     * parameters, call the {@link com.google.api.services.genomics.Genomics.Datasets.Delete#execute()} method to invoke the remote operation.
     *
     * @param datasetId The ID of the dataset to be deleted.
     * @return the request
     */
    public Delete delete(String datasetId) throws java.io.IOException {
      Delete result = new Delete(datasetId);
      initialize(result);
      return result;
    }

    public class Delete extends GenomicsRequest<Void> {

      private static final String REST_PATH = "datasets/{datasetId}";

      /**
       * Deletes a dataset.
       *
       * Create a request for the method "datasets.delete".
       *
       * This request holds the parameters needed by the the genomics server.  After setting any
       * optional parameters, call the {@link com.google.api.services.genomics.Genomics.Datasets.Delete#execute()} method to invoke the remote operation.
       * <p> {@link
       * com.google.api.services.genomics.Genomics.Datasets.Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param datasetId The ID of the dataset to be deleted.
       * @since 1.13
       */
      protected Delete(String datasetId) {
        super(Genomics.this, "DELETE", REST_PATH, null, Void.class);
        this.datasetId = com.google.api.client.util.Preconditions.checkNotNull(datasetId, "Required parameter datasetId must be specified.");
      }

      @Override
      public Delete setAlt(String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** The ID of the dataset to be deleted. */
      @com.google.api.client.util.Key
      private String datasetId;

      /** The ID of the dataset to be deleted.
       */
      public String getDatasetId() {
        return datasetId;
      }

      /** The ID of the dataset to be deleted. */
      public Delete setDatasetId(String datasetId) {
        this.datasetId = datasetId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Gets a dataset by ID.
     *
     * Create a request for the method "datasets.get".
     *
     * This request holds the parameters needed by the genomics server.  After setting any optional
     * parameters, call the {@link com.google.api.services.genomics.Genomics.Datasets.Get#execute()} method to invoke the remote operation.
     *
     * @param datasetId The ID of the dataset.
     * @return the request
     */
    public Get get(String datasetId) throws java.io.IOException {
      Get result = new Get(datasetId);
      initialize(result);
      return result;
    }

    public class Get extends GenomicsRequest<com.google.api.services.genomics.model.Dataset> {

      private static final String REST_PATH = "datasets/{datasetId}";

      /**
       * Gets a dataset by ID.
       *
       * Create a request for the method "datasets.get".
       *
       * This request holds the parameters needed by the the genomics server.  After setting any
       * optional parameters, call the {@link com.google.api.services.genomics.Genomics.Datasets.Get#execute()} method to invoke the remote operation. <p>
       * {@link com.google.api.services.genomics.Genomics.Datasets.Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param datasetId The ID of the dataset.
       * @since 1.13
       */
      protected Get(String datasetId) {
        super(Genomics.this, "GET", REST_PATH, null, com.google.api.services.genomics.model.Dataset.class);
        this.datasetId = com.google.api.client.util.Preconditions.checkNotNull(datasetId, "Required parameter datasetId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** The ID of the dataset. */
      @com.google.api.client.util.Key
      private String datasetId;

      /** The ID of the dataset.
       */
      public String getDatasetId() {
        return datasetId;
      }

      /** The ID of the dataset. */
      public Get setDatasetId(String datasetId) {
        this.datasetId = datasetId;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Lists all datasets.
     *
     * Create a request for the method "datasets.list".
     *
     * This request holds the parameters needed by the genomics server.  After setting any optional
     * parameters, call the {@link com.google.api.services.genomics.Genomics.Datasets.List#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public List list() throws java.io.IOException {
      List result = new List();
      initialize(result);
      return result;
    }

    public class List extends GenomicsRequest<com.google.api.services.genomics.model.ListDatasetsResponse> {

      private static final String REST_PATH = "datasets";

      /**
       * Lists all datasets.
       *
       * Create a request for the method "datasets.list".
       *
       * This request holds the parameters needed by the the genomics server.  After setting any
       * optional parameters, call the {@link com.google.api.services.genomics.Genomics.Datasets.List#execute()} method to invoke the remote operation. <p>
       * {@link com.google.api.services.genomics.Genomics.Datasets.List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected List() {
        super(Genomics.this, "GET", REST_PATH, null, com.google.api.services.genomics.model.ListDatasetsResponse.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(String userIp) {
        return (List) super.setUserIp(userIp);
      }

      /**
       * The continuation token, which is used to page through large result sets. To get the next
       * page of results, set this parameter to the value of "nextPageToken" from the previous
       * response.
       */
      @com.google.api.client.util.Key
      private String pageToken;

      /** The continuation token, which is used to page through large result sets. To get the next page of
     results, set this parameter to the value of "nextPageToken" from the previous response.
       */
      public String getPageToken() {
        return pageToken;
      }

      /**
       * The continuation token, which is used to page through large result sets. To get the next
       * page of results, set this parameter to the value of "nextPageToken" from the previous
       * response.
       */
      public List setPageToken(String pageToken) {
        this.pageToken = pageToken;
        return this;
      }

      /** The Google Cloud Console project number. */
      @com.google.api.client.util.Key
      private Long projectId;

      /** The Google Cloud Console project number.
       */
      public Long getProjectId() {
        return projectId;
      }

      /** The Google Cloud Console project number. */
      public List setProjectId(Long projectId) {
        this.projectId = projectId;
        return this;
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Updates a dataset. This method supports patch semantics.
     *
     * Create a request for the method "datasets.patch".
     *
     * This request holds the parameters needed by the genomics server.  After setting any optional
     * parameters, call the {@link com.google.api.services.genomics.Genomics.Datasets.Patch#execute()} method to invoke the remote operation.
     *
     * @param datasetId The ID of the dataset to be updated.
     * @param content the {@link com.google.api.services.genomics.model.Dataset}
     * @return the request
     */
    public Patch patch(String datasetId, com.google.api.services.genomics.model.Dataset content) throws java.io.IOException {
      Patch result = new Patch(datasetId, content);
      initialize(result);
      return result;
    }

    public class Patch extends GenomicsRequest<com.google.api.services.genomics.model.Dataset> {

      private static final String REST_PATH = "datasets/{datasetId}";

      /**
       * Updates a dataset. This method supports patch semantics.
       *
       * Create a request for the method "datasets.patch".
       *
       * This request holds the parameters needed by the the genomics server.  After setting any
       * optional parameters, call the {@link com.google.api.services.genomics.Genomics.Datasets.Patch#execute()} method to invoke the remote operation.
       * <p> {@link
       * com.google.api.services.genomics.Genomics.Datasets.Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param datasetId The ID of the dataset to be updated.
       * @param content the {@link com.google.api.services.genomics.model.Dataset}
       * @since 1.13
       */
      protected Patch(String datasetId, com.google.api.services.genomics.model.Dataset content) {
        super(Genomics.this, "PATCH", REST_PATH, content, com.google.api.services.genomics.model.Dataset.class);
        this.datasetId = com.google.api.client.util.Preconditions.checkNotNull(datasetId, "Required parameter datasetId must be specified.");
      }

      @Override
      public Patch setAlt(String alt) {
        return (Patch) super.setAlt(alt);
      }

      @Override
      public Patch setFields(String fields) {
        return (Patch) super.setFields(fields);
      }

      @Override
      public Patch setKey(String key) {
        return (Patch) super.setKey(key);
      }

      @Override
      public Patch setOauthToken(String oauthToken) {
        return (Patch) super.setOauthToken(oauthToken);
      }

      @Override
      public Patch setPrettyPrint(Boolean prettyPrint) {
        return (Patch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Patch setQuotaUser(String quotaUser) {
        return (Patch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Patch setUserIp(String userIp) {
        return (Patch) super.setUserIp(userIp);
      }

      /** The ID of the dataset to be updated. */
      @com.google.api.client.util.Key
      private String datasetId;

      /** The ID of the dataset to be updated.
       */
      public String getDatasetId() {
        return datasetId;
      }

      /** The ID of the dataset to be updated. */
      public Patch setDatasetId(String datasetId) {
        this.datasetId = datasetId;
        return this;
      }

      @Override
      public Patch set(String parameterName, Object value) {
        return (Patch) super.set(parameterName, value);
      }
    }
    /**
     * Updates a dataset.
     *
     * Create a request for the method "datasets.update".
     *
     * This request holds the parameters needed by the genomics server.  After setting any optional
     * parameters, call the {@link com.google.api.services.genomics.Genomics.Datasets.Update#execute()} method to invoke the remote operation.
     *
     * @param datasetId The ID of the dataset to be updated.
     * @param content the {@link com.google.api.services.genomics.model.Dataset}
     * @return the request
     */
    public Update update(String datasetId, com.google.api.services.genomics.model.Dataset content) throws java.io.IOException {
      Update result = new Update(datasetId, content);
      initialize(result);
      return result;
    }

    public class Update extends GenomicsRequest<com.google.api.services.genomics.model.Dataset> {

      private static final String REST_PATH = "datasets/{datasetId}";

      /**
       * Updates a dataset.
       *
       * Create a request for the method "datasets.update".
       *
       * This request holds the parameters needed by the the genomics server.  After setting any
       * optional parameters, call the {@link com.google.api.services.genomics.Genomics.Datasets.Update#execute()} method to invoke the remote operation.
       * <p> {@link
       * com.google.api.services.genomics.Genomics.Datasets.Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param datasetId The ID of the dataset to be updated.
       * @param content the {@link com.google.api.services.genomics.model.Dataset}
       * @since 1.13
       */
      protected Update(String datasetId, com.google.api.services.genomics.model.Dataset content) {
        super(Genomics.this, "PUT", REST_PATH, content, com.google.api.services.genomics.model.Dataset.class);
        this.datasetId = com.google.api.client.util.Preconditions.checkNotNull(datasetId, "Required parameter datasetId must be specified.");
      }

      @Override
      public Update setAlt(String alt) {
        return (Update) super.setAlt(alt);
      }

      @Override
      public Update setFields(String fields) {
        return (Update) super.setFields(fields);
      }

      @Override
      public Update setKey(String key) {
        return (Update) super.setKey(key);
      }

      @Override
      public Update setOauthToken(String oauthToken) {
        return (Update) super.setOauthToken(oauthToken);
      }

      @Override
      public Update setPrettyPrint(Boolean prettyPrint) {
        return (Update) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Update setQuotaUser(String quotaUser) {
        return (Update) super.setQuotaUser(quotaUser);
      }

      @Override
      public Update setUserIp(String userIp) {
        return (Update) super.setUserIp(userIp);
      }

      /** The ID of the dataset to be updated. */
      @com.google.api.client.util.Key
      private String datasetId;

      /** The ID of the dataset to be updated.
       */
      public String getDatasetId() {
        return datasetId;
      }

      /** The ID of the dataset to be updated. */
      public Update setDatasetId(String datasetId) {
        this.datasetId = datasetId;
        return this;
      }

      @Override
      public Update set(String parameterName, Object value) {
        return (Update) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Jobs collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Genomics genomics = new Genomics(...);}
   *   {@code Genomics.Jobs.List request = genomics.jobs().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Jobs jobs() {
    return new Jobs();
  }

  /**
   * The "jobs" collection of methods.
   */
  public class Jobs {

    /**
     * Gets a job by ID.
     *
     * Create a request for the method "jobs.get".
     *
     * This request holds the parameters needed by the genomics server.  After setting any optional
     * parameters, call the {@link com.google.api.services.genomics.Genomics.Jobs.Get#execute()} method to invoke the remote operation.
     *
     * @param jobId The ID of the job.
     * @return the request
     */
    public Get get(String jobId) throws java.io.IOException {
      Get result = new Get(jobId);
      initialize(result);
      return result;
    }

    public class Get extends GenomicsRequest<com.google.api.services.genomics.model.Job> {

      private static final String REST_PATH = "jobs/{jobId}";

      /**
       * Gets a job by ID.
       *
       * Create a request for the method "jobs.get".
       *
       * This request holds the parameters needed by the the genomics server.  After setting any
       * optional parameters, call the {@link com.google.api.services.genomics.Genomics.Jobs.Get#execute()} method to invoke the remote operation. <p>
       * {@link com.google.api.services.genomics.Genomics.Jobs.Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param jobId The ID of the job.
       * @since 1.13
       */
      protected Get(String jobId) {
        super(Genomics.this, "GET", REST_PATH, null, com.google.api.services.genomics.model.Job.class);
        this.jobId = com.google.api.client.util.Preconditions.checkNotNull(jobId, "Required parameter jobId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** The ID of the job. */
      @com.google.api.client.util.Key
      private String jobId;

      /** The ID of the job.
       */
      public String getJobId() {
        return jobId;
      }

      /** The ID of the job. */
      public Get setJobId(String jobId) {
        this.jobId = jobId;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Reads collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Genomics genomics = new Genomics(...);}
   *   {@code Genomics.Reads.List request = genomics.reads().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Reads reads() {
    return new Reads();
  }

  /**
   * The "reads" collection of methods.
   */
  public class Reads {

    /**
     * Creates a new read.
     *
     * Create a request for the method "reads.create".
     *
     * This request holds the parameters needed by the genomics server.  After setting any optional
     * parameters, call the {@link com.google.api.services.genomics.Genomics.Reads.Create#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.genomics.model.Read}
     * @return the request
     */
    public Create create(com.google.api.services.genomics.model.Read content) throws java.io.IOException {
      Create result = new Create(content);
      initialize(result);
      return result;
    }

    public class Create extends GenomicsRequest<com.google.api.services.genomics.model.Read> {

      private static final String REST_PATH = "reads";

      /**
       * Creates a new read.
       *
       * Create a request for the method "reads.create".
       *
       * This request holds the parameters needed by the the genomics server.  After setting any
       * optional parameters, call the {@link com.google.api.services.genomics.Genomics.Reads.Create#execute()} method to invoke the remote operation.
       * <p> {@link
       * com.google.api.services.genomics.Genomics.Reads.Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.genomics.model.Read}
       * @since 1.13
       */
      protected Create(com.google.api.services.genomics.model.Read content) {
        super(Genomics.this, "POST", REST_PATH, content, com.google.api.services.genomics.model.Read.class);
      }

      @Override
      public Create setAlt(String alt) {
        return (Create) super.setAlt(alt);
      }

      @Override
      public Create setFields(String fields) {
        return (Create) super.setFields(fields);
      }

      @Override
      public Create setKey(String key) {
        return (Create) super.setKey(key);
      }

      @Override
      public Create setOauthToken(String oauthToken) {
        return (Create) super.setOauthToken(oauthToken);
      }

      @Override
      public Create setPrettyPrint(Boolean prettyPrint) {
        return (Create) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Create setQuotaUser(String quotaUser) {
        return (Create) super.setQuotaUser(quotaUser);
      }

      @Override
      public Create setUserIp(String userIp) {
        return (Create) super.setUserIp(userIp);
      }

      @Override
      public Create set(String parameterName, Object value) {
        return (Create) super.set(parameterName, value);
      }
    }
    /**
     * Deletes a read.
     *
     * Create a request for the method "reads.delete".
     *
     * This request holds the parameters needed by the genomics server.  After setting any optional
     * parameters, call the {@link com.google.api.services.genomics.Genomics.Reads.Delete#execute()} method to invoke the remote operation.
     *
     * @param readId The ID of the read to be deleted.
     * @return the request
     */
    public Delete delete(String readId) throws java.io.IOException {
      Delete result = new Delete(readId);
      initialize(result);
      return result;
    }

    public class Delete extends GenomicsRequest<Void> {

      private static final String REST_PATH = "reads/{readId}";

      /**
       * Deletes a read.
       *
       * Create a request for the method "reads.delete".
       *
       * This request holds the parameters needed by the the genomics server.  After setting any
       * optional parameters, call the {@link com.google.api.services.genomics.Genomics.Reads.Delete#execute()} method to invoke the remote operation.
       * <p> {@link
       * com.google.api.services.genomics.Genomics.Reads.Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param readId The ID of the read to be deleted.
       * @since 1.13
       */
      protected Delete(String readId) {
        super(Genomics.this, "DELETE", REST_PATH, null, Void.class);
        this.readId = com.google.api.client.util.Preconditions.checkNotNull(readId, "Required parameter readId must be specified.");
      }

      @Override
      public Delete setAlt(String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** The ID of the read to be deleted. */
      @com.google.api.client.util.Key
      private String readId;

      /** The ID of the read to be deleted.
       */
      public String getReadId() {
        return readId;
      }

      /** The ID of the read to be deleted. */
      public Delete setReadId(String readId) {
        this.readId = readId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Gets a read by ID.
     *
     * Create a request for the method "reads.get".
     *
     * This request holds the parameters needed by the genomics server.  After setting any optional
     * parameters, call the {@link com.google.api.services.genomics.Genomics.Reads.Get#execute()} method to invoke the remote operation.
     *
     * @param readId The ID of the read.
     * @return the request
     */
    public Get get(String readId) throws java.io.IOException {
      Get result = new Get(readId);
      initialize(result);
      return result;
    }

    public class Get extends GenomicsRequest<com.google.api.services.genomics.model.Read> {

      private static final String REST_PATH = "reads/{readId}";

      /**
       * Gets a read by ID.
       *
       * Create a request for the method "reads.get".
       *
       * This request holds the parameters needed by the the genomics server.  After setting any
       * optional parameters, call the {@link com.google.api.services.genomics.Genomics.Reads.Get#execute()} method to invoke the remote operation. <p>
       * {@link com.google.api.services.genomics.Genomics.Reads.Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param readId The ID of the read.
       * @since 1.13
       */
      protected Get(String readId) {
        super(Genomics.this, "GET", REST_PATH, null, com.google.api.services.genomics.model.Read.class);
        this.readId = com.google.api.client.util.Preconditions.checkNotNull(readId, "Required parameter readId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** The ID of the read. */
      @com.google.api.client.util.Key
      private String readId;

      /** The ID of the read.
       */
      public String getReadId() {
        return readId;
      }

      /** The ID of the read. */
      public Get setReadId(String readId) {
        this.readId = readId;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Updates a read. This method supports patch semantics.
     *
     * Create a request for the method "reads.patch".
     *
     * This request holds the parameters needed by the genomics server.  After setting any optional
     * parameters, call the {@link com.google.api.services.genomics.Genomics.Reads.Patch#execute()} method to invoke the remote operation.
     *
     * @param readId The ID of the read to be updated.
     * @param content the {@link com.google.api.services.genomics.model.Read}
     * @return the request
     */
    public Patch patch(String readId, com.google.api.services.genomics.model.Read content) throws java.io.IOException {
      Patch result = new Patch(readId, content);
      initialize(result);
      return result;
    }

    public class Patch extends GenomicsRequest<com.google.api.services.genomics.model.Read> {

      private static final String REST_PATH = "reads/{readId}";

      /**
       * Updates a read. This method supports patch semantics.
       *
       * Create a request for the method "reads.patch".
       *
       * This request holds the parameters needed by the the genomics server.  After setting any
       * optional parameters, call the {@link com.google.api.services.genomics.Genomics.Reads.Patch#execute()} method to invoke the remote operation.
       * <p> {@link
       * com.google.api.services.genomics.Genomics.Reads.Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param readId The ID of the read to be updated.
       * @param content the {@link com.google.api.services.genomics.model.Read}
       * @since 1.13
       */
      protected Patch(String readId, com.google.api.services.genomics.model.Read content) {
        super(Genomics.this, "PATCH", REST_PATH, content, com.google.api.services.genomics.model.Read.class);
        this.readId = com.google.api.client.util.Preconditions.checkNotNull(readId, "Required parameter readId must be specified.");
      }

      @Override
      public Patch setAlt(String alt) {
        return (Patch) super.setAlt(alt);
      }

      @Override
      public Patch setFields(String fields) {
        return (Patch) super.setFields(fields);
      }

      @Override
      public Patch setKey(String key) {
        return (Patch) super.setKey(key);
      }

      @Override
      public Patch setOauthToken(String oauthToken) {
        return (Patch) super.setOauthToken(oauthToken);
      }

      @Override
      public Patch setPrettyPrint(Boolean prettyPrint) {
        return (Patch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Patch setQuotaUser(String quotaUser) {
        return (Patch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Patch setUserIp(String userIp) {
        return (Patch) super.setUserIp(userIp);
      }

      /** The ID of the read to be updated. */
      @com.google.api.client.util.Key
      private String readId;

      /** The ID of the read to be updated.
       */
      public String getReadId() {
        return readId;
      }

      /** The ID of the read to be updated. */
      public Patch setReadId(String readId) {
        this.readId = readId;
        return this;
      }

      @Override
      public Patch set(String parameterName, Object value) {
        return (Patch) super.set(parameterName, value);
      }
    }
    /**
     * Gets a list of reads matching the criteria.
     *
     * Create a request for the method "reads.search".
     *
     * This request holds the parameters needed by the genomics server.  After setting any optional
     * parameters, call the {@link com.google.api.services.genomics.Genomics.Reads.Search#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.genomics.model.SearchReadsRequest}
     * @return the request
     */
    public Search search(com.google.api.services.genomics.model.SearchReadsRequest content) throws java.io.IOException {
      Search result = new Search(content);
      initialize(result);
      return result;
    }

    public class Search extends GenomicsRequest<com.google.api.services.genomics.model.SearchReadsResponse> {

      private static final String REST_PATH = "reads/search";

      /**
       * Gets a list of reads matching the criteria.
       *
       * Create a request for the method "reads.search".
       *
       * This request holds the parameters needed by the the genomics server.  After setting any
       * optional parameters, call the {@link com.google.api.services.genomics.Genomics.Reads.Search#execute()} method to invoke the remote operation.
       * <p> {@link
       * com.google.api.services.genomics.Genomics.Reads.Search#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.genomics.model.SearchReadsRequest}
       * @since 1.13
       */
      protected Search(com.google.api.services.genomics.model.SearchReadsRequest content) {
        super(Genomics.this, "POST", REST_PATH, content, com.google.api.services.genomics.model.SearchReadsResponse.class);
      }

      @Override
      public Search setAlt(String alt) {
        return (Search) super.setAlt(alt);
      }

      @Override
      public Search setFields(String fields) {
        return (Search) super.setFields(fields);
      }

      @Override
      public Search setKey(String key) {
        return (Search) super.setKey(key);
      }

      @Override
      public Search setOauthToken(String oauthToken) {
        return (Search) super.setOauthToken(oauthToken);
      }

      @Override
      public Search setPrettyPrint(Boolean prettyPrint) {
        return (Search) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Search setQuotaUser(String quotaUser) {
        return (Search) super.setQuotaUser(quotaUser);
      }

      @Override
      public Search setUserIp(String userIp) {
        return (Search) super.setUserIp(userIp);
      }

      @Override
      public Search set(String parameterName, Object value) {
        return (Search) super.set(parameterName, value);
      }
    }
    /**
     * Updates a read.
     *
     * Create a request for the method "reads.update".
     *
     * This request holds the parameters needed by the genomics server.  After setting any optional
     * parameters, call the {@link com.google.api.services.genomics.Genomics.Reads.Update#execute()} method to invoke the remote operation.
     *
     * @param readId The ID of the read to be updated.
     * @param content the {@link com.google.api.services.genomics.model.Read}
     * @return the request
     */
    public Update update(String readId, com.google.api.services.genomics.model.Read content) throws java.io.IOException {
      Update result = new Update(readId, content);
      initialize(result);
      return result;
    }

    public class Update extends GenomicsRequest<com.google.api.services.genomics.model.Read> {

      private static final String REST_PATH = "reads/{readId}";

      /**
       * Updates a read.
       *
       * Create a request for the method "reads.update".
       *
       * This request holds the parameters needed by the the genomics server.  After setting any
       * optional parameters, call the {@link com.google.api.services.genomics.Genomics.Reads.Update#execute()} method to invoke the remote operation.
       * <p> {@link
       * com.google.api.services.genomics.Genomics.Reads.Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param readId The ID of the read to be updated.
       * @param content the {@link com.google.api.services.genomics.model.Read}
       * @since 1.13
       */
      protected Update(String readId, com.google.api.services.genomics.model.Read content) {
        super(Genomics.this, "PUT", REST_PATH, content, com.google.api.services.genomics.model.Read.class);
        this.readId = com.google.api.client.util.Preconditions.checkNotNull(readId, "Required parameter readId must be specified.");
      }

      @Override
      public Update setAlt(String alt) {
        return (Update) super.setAlt(alt);
      }

      @Override
      public Update setFields(String fields) {
        return (Update) super.setFields(fields);
      }

      @Override
      public Update setKey(String key) {
        return (Update) super.setKey(key);
      }

      @Override
      public Update setOauthToken(String oauthToken) {
        return (Update) super.setOauthToken(oauthToken);
      }

      @Override
      public Update setPrettyPrint(Boolean prettyPrint) {
        return (Update) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Update setQuotaUser(String quotaUser) {
        return (Update) super.setQuotaUser(quotaUser);
      }

      @Override
      public Update setUserIp(String userIp) {
        return (Update) super.setUserIp(userIp);
      }

      /** The ID of the read to be updated. */
      @com.google.api.client.util.Key
      private String readId;

      /** The ID of the read to be updated.
       */
      public String getReadId() {
        return readId;
      }

      /** The ID of the read to be updated. */
      public Update setReadId(String readId) {
        this.readId = readId;
        return this;
      }

      @Override
      public Update set(String parameterName, Object value) {
        return (Update) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Readsets collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Genomics genomics = new Genomics(...);}
   *   {@code Genomics.Readsets.List request = genomics.readsets().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Readsets readsets() {
    return new Readsets();
  }

  /**
   * The "readsets" collection of methods.
   */
  public class Readsets {

    /**
     * Creates a new readset.
     *
     * Create a request for the method "readsets.create".
     *
     * This request holds the parameters needed by the genomics server.  After setting any optional
     * parameters, call the {@link com.google.api.services.genomics.Genomics.Readsets.Create#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.genomics.model.Readset}
     * @return the request
     */
    public Create create(com.google.api.services.genomics.model.Readset content) throws java.io.IOException {
      Create result = new Create(content);
      initialize(result);
      return result;
    }

    public class Create extends GenomicsRequest<com.google.api.services.genomics.model.Readset> {

      private static final String REST_PATH = "readsets";

      /**
       * Creates a new readset.
       *
       * Create a request for the method "readsets.create".
       *
       * This request holds the parameters needed by the the genomics server.  After setting any
       * optional parameters, call the {@link com.google.api.services.genomics.Genomics.Readsets.Create#execute()} method to invoke the remote operation.
       * <p> {@link
       * com.google.api.services.genomics.Genomics.Readsets.Create#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.genomics.model.Readset}
       * @since 1.13
       */
      protected Create(com.google.api.services.genomics.model.Readset content) {
        super(Genomics.this, "POST", REST_PATH, content, com.google.api.services.genomics.model.Readset.class);
      }

      @Override
      public Create setAlt(String alt) {
        return (Create) super.setAlt(alt);
      }

      @Override
      public Create setFields(String fields) {
        return (Create) super.setFields(fields);
      }

      @Override
      public Create setKey(String key) {
        return (Create) super.setKey(key);
      }

      @Override
      public Create setOauthToken(String oauthToken) {
        return (Create) super.setOauthToken(oauthToken);
      }

      @Override
      public Create setPrettyPrint(Boolean prettyPrint) {
        return (Create) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Create setQuotaUser(String quotaUser) {
        return (Create) super.setQuotaUser(quotaUser);
      }

      @Override
      public Create setUserIp(String userIp) {
        return (Create) super.setUserIp(userIp);
      }

      @Override
      public Create set(String parameterName, Object value) {
        return (Create) super.set(parameterName, value);
      }
    }
    /**
     * Deletes a readset.
     *
     * Create a request for the method "readsets.delete".
     *
     * This request holds the parameters needed by the genomics server.  After setting any optional
     * parameters, call the {@link com.google.api.services.genomics.Genomics.Readsets.Delete#execute()} method to invoke the remote operation.
     *
     * @param readsetId The ID of the readset to be deleted.
     * @return the request
     */
    public Delete delete(String readsetId) throws java.io.IOException {
      Delete result = new Delete(readsetId);
      initialize(result);
      return result;
    }

    public class Delete extends GenomicsRequest<Void> {

      private static final String REST_PATH = "readsets/{readsetId}";

      /**
       * Deletes a readset.
       *
       * Create a request for the method "readsets.delete".
       *
       * This request holds the parameters needed by the the genomics server.  After setting any
       * optional parameters, call the {@link com.google.api.services.genomics.Genomics.Readsets.Delete#execute()} method to invoke the remote operation.
       * <p> {@link
       * com.google.api.services.genomics.Genomics.Readsets.Delete#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param readsetId The ID of the readset to be deleted.
       * @since 1.13
       */
      protected Delete(String readsetId) {
        super(Genomics.this, "DELETE", REST_PATH, null, Void.class);
        this.readsetId = com.google.api.client.util.Preconditions.checkNotNull(readsetId, "Required parameter readsetId must be specified.");
      }

      @Override
      public Delete setAlt(String alt) {
        return (Delete) super.setAlt(alt);
      }

      @Override
      public Delete setFields(String fields) {
        return (Delete) super.setFields(fields);
      }

      @Override
      public Delete setKey(String key) {
        return (Delete) super.setKey(key);
      }

      @Override
      public Delete setOauthToken(String oauthToken) {
        return (Delete) super.setOauthToken(oauthToken);
      }

      @Override
      public Delete setPrettyPrint(Boolean prettyPrint) {
        return (Delete) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Delete setQuotaUser(String quotaUser) {
        return (Delete) super.setQuotaUser(quotaUser);
      }

      @Override
      public Delete setUserIp(String userIp) {
        return (Delete) super.setUserIp(userIp);
      }

      /** The ID of the readset to be deleted. */
      @com.google.api.client.util.Key
      private String readsetId;

      /** The ID of the readset to be deleted.
       */
      public String getReadsetId() {
        return readsetId;
      }

      /** The ID of the readset to be deleted. */
      public Delete setReadsetId(String readsetId) {
        this.readsetId = readsetId;
        return this;
      }

      @Override
      public Delete set(String parameterName, Object value) {
        return (Delete) super.set(parameterName, value);
      }
    }
    /**
     * Gets a readset by ID.
     *
     * Create a request for the method "readsets.get".
     *
     * This request holds the parameters needed by the genomics server.  After setting any optional
     * parameters, call the {@link com.google.api.services.genomics.Genomics.Readsets.Get#execute()} method to invoke the remote operation.
     *
     * @param readsetId The ID of the readset.
     * @return the request
     */
    public Get get(String readsetId) throws java.io.IOException {
      Get result = new Get(readsetId);
      initialize(result);
      return result;
    }

    public class Get extends GenomicsRequest<com.google.api.services.genomics.model.Readset> {

      private static final String REST_PATH = "readsets/{readsetId}";

      /**
       * Gets a readset by ID.
       *
       * Create a request for the method "readsets.get".
       *
       * This request holds the parameters needed by the the genomics server.  After setting any
       * optional parameters, call the {@link com.google.api.services.genomics.Genomics.Readsets.Get#execute()} method to invoke the remote operation. <p>
       * {@link com.google.api.services.genomics.Genomics.Readsets.Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param readsetId The ID of the readset.
       * @since 1.13
       */
      protected Get(String readsetId) {
        super(Genomics.this, "GET", REST_PATH, null, com.google.api.services.genomics.model.Readset.class);
        this.readsetId = com.google.api.client.util.Preconditions.checkNotNull(readsetId, "Required parameter readsetId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      /** The ID of the readset. */
      @com.google.api.client.util.Key
      private String readsetId;

      /** The ID of the readset.
       */
      public String getReadsetId() {
        return readsetId;
      }

      /** The ID of the readset. */
      public Get setReadsetId(String readsetId) {
        this.readsetId = readsetId;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Creates readsets by asynchronously importing the provided information.
     *
     * Create a request for the method "readsets.import".
     *
     * This request holds the parameters needed by the genomics server.  After setting any optional
     * parameters, call the {@link com.google.api.services.genomics.Genomics.Readsets.GenomicsImport#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.genomics.model.ImportReadsetsRequest}
     * @return the request
     */
    public GenomicsImport genomicsImport(com.google.api.services.genomics.model.ImportReadsetsRequest content) throws java.io.IOException {
      GenomicsImport result = new GenomicsImport(content);
      initialize(result);
      return result;
    }

    public class GenomicsImport extends GenomicsRequest<com.google.api.services.genomics.model.ImportReadsetsResponse> {

      private static final String REST_PATH = "readsets/import";

      /**
       * Creates readsets by asynchronously importing the provided information.
       *
       * Create a request for the method "readsets.import".
       *
       * This request holds the parameters needed by the the genomics server.  After setting any
       * optional parameters, call the {@link com.google.api.services.genomics.Genomics.Readsets.GenomicsImport#execute()} method to invoke the remote
       * operation. <p> {@link com.google.api.services.genomics.Genomics.Readsets.GenomicsImport#initialize(com.google.api.client.googleapis.services.Abstr
       * actGoogleClientRequest)} must be called to initialize this instance immediately after invoking
       * the constructor. </p>
       *
       * @param content the {@link com.google.api.services.genomics.model.ImportReadsetsRequest}
       * @since 1.13
       */
      protected GenomicsImport(com.google.api.services.genomics.model.ImportReadsetsRequest content) {
        super(Genomics.this, "POST", REST_PATH, content, com.google.api.services.genomics.model.ImportReadsetsResponse.class);
      }

      @Override
      public GenomicsImport setAlt(String alt) {
        return (GenomicsImport) super.setAlt(alt);
      }

      @Override
      public GenomicsImport setFields(String fields) {
        return (GenomicsImport) super.setFields(fields);
      }

      @Override
      public GenomicsImport setKey(String key) {
        return (GenomicsImport) super.setKey(key);
      }

      @Override
      public GenomicsImport setOauthToken(String oauthToken) {
        return (GenomicsImport) super.setOauthToken(oauthToken);
      }

      @Override
      public GenomicsImport setPrettyPrint(Boolean prettyPrint) {
        return (GenomicsImport) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GenomicsImport setQuotaUser(String quotaUser) {
        return (GenomicsImport) super.setQuotaUser(quotaUser);
      }

      @Override
      public GenomicsImport setUserIp(String userIp) {
        return (GenomicsImport) super.setUserIp(userIp);
      }

      @Override
      public GenomicsImport set(String parameterName, Object value) {
        return (GenomicsImport) super.set(parameterName, value);
      }
    }
    /**
     * Updates a readset. This method supports patch semantics.
     *
     * Create a request for the method "readsets.patch".
     *
     * This request holds the parameters needed by the genomics server.  After setting any optional
     * parameters, call the {@link com.google.api.services.genomics.Genomics.Readsets.Patch#execute()} method to invoke the remote operation.
     *
     * @param readsetId The ID of the readset to be updated.
     * @param content the {@link com.google.api.services.genomics.model.Readset}
     * @return the request
     */
    public Patch patch(String readsetId, com.google.api.services.genomics.model.Readset content) throws java.io.IOException {
      Patch result = new Patch(readsetId, content);
      initialize(result);
      return result;
    }

    public class Patch extends GenomicsRequest<com.google.api.services.genomics.model.Readset> {

      private static final String REST_PATH = "readsets/{readsetId}";

      /**
       * Updates a readset. This method supports patch semantics.
       *
       * Create a request for the method "readsets.patch".
       *
       * This request holds the parameters needed by the the genomics server.  After setting any
       * optional parameters, call the {@link com.google.api.services.genomics.Genomics.Readsets.Patch#execute()} method to invoke the remote operation.
       * <p> {@link
       * com.google.api.services.genomics.Genomics.Readsets.Patch#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param readsetId The ID of the readset to be updated.
       * @param content the {@link com.google.api.services.genomics.model.Readset}
       * @since 1.13
       */
      protected Patch(String readsetId, com.google.api.services.genomics.model.Readset content) {
        super(Genomics.this, "PATCH", REST_PATH, content, com.google.api.services.genomics.model.Readset.class);
        this.readsetId = com.google.api.client.util.Preconditions.checkNotNull(readsetId, "Required parameter readsetId must be specified.");
      }

      @Override
      public Patch setAlt(String alt) {
        return (Patch) super.setAlt(alt);
      }

      @Override
      public Patch setFields(String fields) {
        return (Patch) super.setFields(fields);
      }

      @Override
      public Patch setKey(String key) {
        return (Patch) super.setKey(key);
      }

      @Override
      public Patch setOauthToken(String oauthToken) {
        return (Patch) super.setOauthToken(oauthToken);
      }

      @Override
      public Patch setPrettyPrint(Boolean prettyPrint) {
        return (Patch) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Patch setQuotaUser(String quotaUser) {
        return (Patch) super.setQuotaUser(quotaUser);
      }

      @Override
      public Patch setUserIp(String userIp) {
        return (Patch) super.setUserIp(userIp);
      }

      /** The ID of the readset to be updated. */
      @com.google.api.client.util.Key
      private String readsetId;

      /** The ID of the readset to be updated.
       */
      public String getReadsetId() {
        return readsetId;
      }

      /** The ID of the readset to be updated. */
      public Patch setReadsetId(String readsetId) {
        this.readsetId = readsetId;
        return this;
      }

      @Override
      public Patch set(String parameterName, Object value) {
        return (Patch) super.set(parameterName, value);
      }
    }
    /**
     * Gets a list of readsets matching the criteria.
     *
     * Create a request for the method "readsets.search".
     *
     * This request holds the parameters needed by the genomics server.  After setting any optional
     * parameters, call the {@link com.google.api.services.genomics.Genomics.Readsets.Search#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.genomics.model.SearchReadsetsRequest}
     * @return the request
     */
    public Search search(com.google.api.services.genomics.model.SearchReadsetsRequest content) throws java.io.IOException {
      Search result = new Search(content);
      initialize(result);
      return result;
    }

    public class Search extends GenomicsRequest<com.google.api.services.genomics.model.SearchReadsetsResponse> {

      private static final String REST_PATH = "readsets/search";

      /**
       * Gets a list of readsets matching the criteria.
       *
       * Create a request for the method "readsets.search".
       *
       * This request holds the parameters needed by the the genomics server.  After setting any
       * optional parameters, call the {@link com.google.api.services.genomics.Genomics.Readsets.Search#execute()} method to invoke the remote operation.
       * <p> {@link
       * com.google.api.services.genomics.Genomics.Readsets.Search#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.genomics.model.SearchReadsetsRequest}
       * @since 1.13
       */
      protected Search(com.google.api.services.genomics.model.SearchReadsetsRequest content) {
        super(Genomics.this, "POST", REST_PATH, content, com.google.api.services.genomics.model.SearchReadsetsResponse.class);
      }

      @Override
      public Search setAlt(String alt) {
        return (Search) super.setAlt(alt);
      }

      @Override
      public Search setFields(String fields) {
        return (Search) super.setFields(fields);
      }

      @Override
      public Search setKey(String key) {
        return (Search) super.setKey(key);
      }

      @Override
      public Search setOauthToken(String oauthToken) {
        return (Search) super.setOauthToken(oauthToken);
      }

      @Override
      public Search setPrettyPrint(Boolean prettyPrint) {
        return (Search) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Search setQuotaUser(String quotaUser) {
        return (Search) super.setQuotaUser(quotaUser);
      }

      @Override
      public Search setUserIp(String userIp) {
        return (Search) super.setUserIp(userIp);
      }

      @Override
      public Search set(String parameterName, Object value) {
        return (Search) super.set(parameterName, value);
      }
    }
    /**
     * Updates a readset.
     *
     * Create a request for the method "readsets.update".
     *
     * This request holds the parameters needed by the genomics server.  After setting any optional
     * parameters, call the {@link com.google.api.services.genomics.Genomics.Readsets.Update#execute()} method to invoke the remote operation.
     *
     * @param readsetId The ID of the readset to be updated.
     * @param content the {@link com.google.api.services.genomics.model.Readset}
     * @return the request
     */
    public Update update(String readsetId, com.google.api.services.genomics.model.Readset content) throws java.io.IOException {
      Update result = new Update(readsetId, content);
      initialize(result);
      return result;
    }

    public class Update extends GenomicsRequest<com.google.api.services.genomics.model.Readset> {

      private static final String REST_PATH = "readsets/{readsetId}";

      /**
       * Updates a readset.
       *
       * Create a request for the method "readsets.update".
       *
       * This request holds the parameters needed by the the genomics server.  After setting any
       * optional parameters, call the {@link com.google.api.services.genomics.Genomics.Readsets.Update#execute()} method to invoke the remote operation.
       * <p> {@link
       * com.google.api.services.genomics.Genomics.Readsets.Update#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param readsetId The ID of the readset to be updated.
       * @param content the {@link com.google.api.services.genomics.model.Readset}
       * @since 1.13
       */
      protected Update(String readsetId, com.google.api.services.genomics.model.Readset content) {
        super(Genomics.this, "PUT", REST_PATH, content, com.google.api.services.genomics.model.Readset.class);
        this.readsetId = com.google.api.client.util.Preconditions.checkNotNull(readsetId, "Required parameter readsetId must be specified.");
      }

      @Override
      public Update setAlt(String alt) {
        return (Update) super.setAlt(alt);
      }

      @Override
      public Update setFields(String fields) {
        return (Update) super.setFields(fields);
      }

      @Override
      public Update setKey(String key) {
        return (Update) super.setKey(key);
      }

      @Override
      public Update setOauthToken(String oauthToken) {
        return (Update) super.setOauthToken(oauthToken);
      }

      @Override
      public Update setPrettyPrint(Boolean prettyPrint) {
        return (Update) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Update setQuotaUser(String quotaUser) {
        return (Update) super.setQuotaUser(quotaUser);
      }

      @Override
      public Update setUserIp(String userIp) {
        return (Update) super.setUserIp(userIp);
      }

      /** The ID of the readset to be updated. */
      @com.google.api.client.util.Key
      private String readsetId;

      /** The ID of the readset to be updated.
       */
      public String getReadsetId() {
        return readsetId;
      }

      /** The ID of the readset to be updated. */
      public Update setReadsetId(String readsetId) {
        this.readsetId = readsetId;
        return this;
      }

      @Override
      public Update set(String parameterName, Object value) {
        return (Update) super.set(parameterName, value);
      }
    }

  }

  /**
   * Builder for {@link com.google.api.services.genomics.Genomics}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link com.google.api.services.genomics.Genomics}. */
    @Override
    public Genomics build() {
      return new Genomics(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link GenomicsRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setGenomicsRequestInitializer(
        GenomicsRequestInitializer genomicsRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(genomicsRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
